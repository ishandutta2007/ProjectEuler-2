#------------------------------------------------------ Pentagon numbers ---------------------------------------------- #
#                                                                                                                       #
#       Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:            #
#                                                                                                                       #
#                                   1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...                                         #
#                                                                                                                       #
#       It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.    #
#                                                                                                                       #
#       Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are                          #
#       pentagonal and D = |Pk − Pj| is minimised; what is the value of D?                                              #
# --------------------------------------------------------------------------------------------------------------------- #
import time
import math

def genPentagonalsNumbers(t):
    genPentagonalsNumbers.PENTAGONALS = [0] * (t + 1)
    for i in range(t + 1):
        genPentagonalsNumbers.PENTAGONALS[i] = i * (3 * i - 1) // 2

    return genPentagonalsNumbers.PENTAGONALS
genPentagonalsNumbers.PENTAGONALS = []

def isPentagonalNumber(n):
    return (n in isPentagonalNumber.PENTAGONALS)
isPentagonalNumber.PENTAGONALS = { }

def eu44():
    TOP = 3000

    genPentagonalsNumbers(2 * TOP)
    isPentagonalNumber.PENTAGONALS = dict([(p, True) for p in genPentagonalsNumbers.PENTAGONALS])
    
    for i in range(1, TOP):
        for j in range(i + 1, TOP):
            if (isPentagonalNumber(genPentagonalsNumbers.PENTAGONALS[i] + genPentagonalsNumbers.PENTAGONALS[j]) and
                isPentagonalNumber(2 * genPentagonalsNumbers.PENTAGONALS[i] + genPentagonalsNumbers.PENTAGONALS[j]) ):
                return genPentagonalsNumbers.PENTAGONALS[j]
            
if __name__ == "__main__":
    startTime = time.clock()
    print (eu44())
    elapsedTime = time.clock() - startTime
    print ("Time spent in (", __name__, ") is: ", elapsedTime, " sec")
